{"version":3,"sources":["authorisation/ErrorMessage.js","firebase-config.js","authorisation/Login.js","authorisation/Registration.js","authorisation/RegistrationSucceed.js","To-Do/Task-List.js","To-Do/New-Task.js","authorisation/Form.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorMessage","errorMessageActive","errorMessage","setErrorMessageActive","useEffect","timer","setTimeout","clearTimeout","className","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","Login","setActiveRegistration","activeLogIn","setActiveLogIn","setErrorMessage","useState","loginEmail","setLoginEmail","loginPassword","setLoginPassword","login","e","a","preventDefault","signInWithEmailAndPassword","onClick","stopPropagation","type","placeholder","required","onChange","target","value","Registration","activeRegistration","setActiveRegistratoinSucceed","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","handlerEmailInput","toClear","handlerPasswordInput","register","createUserWithEmailAndPassword","registrationSucceedMessage","clearInputs","message","RegistrationSucceed","activeRegistratoinSucceed","TaskList","allTask","setAllTask","fetch","then","res","json","data","console","log","Object","values","map","i","arrayFromDataBase","push","length","noTodosMessege","task","idToCheck","updateTaskList","id","isDone","completeTodo","todoTitle","prev","filter","tastToDelete","deleteTodo","key","NewTask","setNewTask","newTask","addToDo","method","body","JSON","stringify","headers","response","idFromDatabase","name","onSubmit","Date","toLocaleString","Math","random","disabled","Form","ReactDOM","createPortal","document","getElementById","App","logout","signOut","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render"],"mappings":"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","file":"static/js/main.649af327.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\n\n\nexport function ErrorMessage({errorMessageActive, errorMessage, setErrorMessageActive}) {\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setErrorMessageActive(false);\n        }, 2000);\n        return () => clearTimeout(timer);\n      }, [errorMessageActive]);\n\n\n    return (\n        <div className={errorMessageActive ? 'error-message active' : 'error-message'}>\n            <p>{errorMessage}</p>\n        </div>\n    )\n}","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from 'firebase/auth'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDb2CaImjZHl99ewJKDpPvhb6hFySvFr_g\",\n    authDomain: \"to-do-withdatabase.firebaseapp.com\",\n    databaseURL: \"https://to-do-withdatabase-default-rtdb.firebaseio.com\",\n    projectId: \"to-do-withdatabase\",\n    storageBucket: \"to-do-withdatabase.appspot.com\",\n    messagingSenderId: \"110427066017\",\n    appId: \"1:110427066017:web:42723a6b66a5a65f5faae0\"\n  };\n\n  const app = initializeApp(firebaseConfig);\n\n  export const auth = getAuth(app)","import { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../firebase-config'\nimport React from 'react';\nimport { useState } from 'react';\n\nexport function Login({setActiveRegistration, activeLogIn, setActiveLogIn, setErrorMessageActive, setErrorMessage}){\n\n  const [loginEmail, setLoginEmail] = useState('')\n  const [loginPassword, setLoginPassword] = useState('')\n\n\nconst login = async (e) => {\n    e.preventDefault()\n        try {\n            const user = await signInWithEmailAndPassword(auth, loginEmail, loginPassword)\n            if(user) {\n              setActiveLogIn(false)\n              setActiveRegistration(false) \n            }\n        } // discribe an error !\n        catch (error) {\n          setErrorMessageActive(true)\n          setErrorMessage('Ops, login or password is bad or user doesn\\'t exist ')\n            // console.log('Ops, login or password is bad')\n        }\n}\n  \n    function openLoginForm(){\n        setActiveLogIn(false)\n        setActiveRegistration(true)   \n    }\n\nreturn (\n        <div className={activeLogIn ? \"login-form active\" : \"login-form\"} onClick={e => e.stopPropagation()}>\n      <h1>Log in</h1>\n        <form>\n            <div className=\"form-control\">\n            <input type=\"email\" placeholder=\"Email\" required onChange={(e) => setLoginEmail(e.target.value)}/>\n            </div>\n            <div className=\"form-control\">\n            <input type=\"password\" placeholder=\"Password\" required onChange={(e) => setLoginPassword(e.target.value)}/>\n            </div>\n            <button className=\"btn\" onClick={login}>Log IN</button>\n            <p className=\"text\">Haven't an account <span onClick={() => openLoginForm()}>Registration</span></p>\n        </form>\n     </div>\n    )\n  }\n\n\n\n\n\n      // return ReactDOM.createPortal(\n    //     <div className={activeLogIn ? \"layout-form active\" : \"layout-form\"} onClick={() => closeForm()}>\n\n    // ...\n\n       // ,  \n     // document.getElementById('portal')","import React, { useEffect, useState } from 'react'\nimport { createUserWithEmailAndPassword } from 'firebase/auth'\nimport { auth } from '../firebase-config'\n\nexport function Registration({activeRegistration, setActiveRegistration, setActiveLogIn, setActiveRegistratoinSucceed, setErrorMessageActive, setErrorMessage, errorMessageActive}){\n\nconst [registerEmail, setRegisterEmail] = useState('')\nconst [registerPassword, setRegisterPassword] = useState('')\n\n//clear inputs to complete\nfunction handlerEmailInput(e, toClear){\n    setRegisterEmail(e.target.value)\n}\n\nfunction handlerPasswordInput(e, toClear){\n    setRegisterPassword(e.target.value) \n}\n\n\n\nconst register = async (e) => {\n    e.preventDefault()\n        try {\n            const user = await createUserWithEmailAndPassword(auth, registerEmail, registerPassword)\n            // CLEAR INPUTS! to fix!\n            registrationSucceedMessage()\n            clearInputs()\n        }\n        catch (error) {\n            if(error.message === 'Firebase: Password should be at least 6 characters (auth/weak-password).') {\n                setErrorMessageActive(true)\n                setErrorMessage('Password should be at least 6 characters')\n            }else if(error.message === 'Firebase: Error (auth/email-already-in-use).') {\n                setErrorMessageActive(true)\n                setErrorMessage('User already exist')\n            }\n        }\n    }\n\n\n    function openRegistrationForm(){\n        setActiveRegistration(false)\n        setActiveLogIn(true)\n    }\n\n    function registrationSucceedMessage() {\n        setActiveRegistration(false)\n        setActiveLogIn(false)\n        setActiveRegistratoinSucceed(true)\n        }\n\n\n        // to complete\n    function clearInputs() {\n        handlerEmailInput(null, true)\n        handlerPasswordInput(null, true)\n    }\n\n\nreturn (\n    <div className={activeRegistration ? \"registration-form active\" : \"registration-form\"} onClick={e => e.stopPropagation()}>\n      <h1>Registration</h1>\n        <form>\n            <div className=\"form-control\">\n                <input type=\"email\" placeholder=\"Email\" required onChange={handlerEmailInput}/>\n            </div>\n            <div className=\"form-control\">\n                <input type=\"password\" placeholder=\"Password\" required onChange={handlerPasswordInput}/>\n            </div>\n            {/* <div className=\"form-control\">\n                <input type=\"password\" placeholder=\"Confirm password\" required />\n            </div> */}\n            <button className=\"btn\" type='submit' onClick={register} >Registration</button>\n            <p className=\"text\">Have an account? <span onClick={() => openRegistrationForm()}>Log in</span></p>\n            </form>\n         </div>\n        )\n     }\n\n  //     return ReactDOM.createPortal(\n//  <div className={activeRegistration ? \"layout-form active\" : \"layout-form\"} onClick={() => closeForm()}>\n\n        // ...\n\n        // </div>\n        // ,\n        // document.getElementById('portal')\n\n","import React from 'react'\n\n\nexport function RegistrationSucceed({activeRegistratoinSucceed, setActiveLogIn, setActiveRegistration, setActiveRegistratoinSucceed}) {\n\n    function openLogIn(){\n        setActiveRegistratoinSucceed(false)\n        setActiveRegistration(false)\n        setActiveLogIn(true)\n    }\n\n    return (\n        <div className={activeRegistratoinSucceed ? \"registration-succeed-form active\" : \"registration-succeed-form\"}>\n        <h1>Registration succeed, then: </h1>\n        <button className=\"btn\" onClick={() => openLogIn()}>Log IN</button>\n        </div>\n    )\n\n}","import React, { useEffect } from 'react';\n\nexport function TaskList({ allTask, setAllTask }) {\n\n    function noTodosMessege(){\n        if (allTask.length === 0){ // first = allTast.length === 0\n            return <h3>Not even todos yet :(</h3>\n      }\n}\n\n\n    function deleteTodo(task){\n        setAllTask((prev) => \n        prev.filter(tastToDelete => tastToDelete.id !== task.id))\n}\n\nfunction completeTodo(idToCheck){\n    const updateTaskList = allTask.map(task => {\n        if(task.id === idToCheck) {\n            task.isDone = !task.isDone\n        }\n        return task\n     })\n        setAllTask(updateTaskList)\n}\n\n// Render list from database after log in\n\nuseEffect(() => {\n    fetch('https://to-do-withdatabase-default-rtdb.firebaseio.com/todos.json')\n    .then(res => res.json())\n    .then(data => {\n        if(data === null){\n            setAllTask([])\n            console.log(\"database is empty!\")\n        } else {\n            const getListFromDataBase = () => Object.values(data).map(i => arrayFromDataBase.push(i))\n            getListFromDataBase()\n        }\n    }) \n  }, [])\n\n  const arrayFromDataBase = []\n\n  useEffect(() => {\n    setAllTask(arrayFromDataBase)\n  }, [])\n\n\n\n  \n\n    return (\n        <div className=\"task-list\">\n            <h2>To do:</h2>\n            <ul>\n                {noTodosMessege()}\n                {allTask.map((task) => {\n                    return <li key={task.key}>\n                        <input \n                        type=\"checkbox\" \n                        onClick={() => completeTodo(task.id)}/>\n                        <p className={task.isDone ? 'check-up active' : 'check-up'}>\n                        {task.todoTitle}\n                        </p>\n                        <small>{task.id}\n                        <i onClick={() => deleteTodo(task)}>&times;</i>\n                        </small>\n                     </li>\n                 })\n                }\n            </ul>\n        </div>\n    )\n}","import React from 'react';\n\nexport function NewTask({setNewTask, newTask, setAllTask}) {\n\n    function handlerChange({target}){\n    // const todo = target.value\n    // const name = target.name\n    const { value, name } = target\n    // (prev) - ???\n    setNewTask({id: new Date().toLocaleString(), [name]: value, isDone: false, key: Math.random()*1000})\n }\n\n    function addToDo(){\n        setAllTask((prev) => [ ...prev, newTask ])\n        addTaskToDataBase()\n        setNewTask({value: ''})\n    }\n\n    //database ...\n\n    function addTaskToDataBase() {\n        return fetch('https://to-do-withdatabase-default-rtdb.firebaseio.com/todos.json' , {\n        method: 'POST',\n        body: JSON.stringify(newTask),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }).then(response => response.json())\n    .then(response => {\n        newTask.idFromDatabase = response.name\n        // console.log('from new task: ', newTask)\n        // console.log('from new task all task : ', allTask)\n    })\n} \n\n\n    return (\n        <div className=\"new-task\">\n        <form onSubmit={e => e.preventDefault()}>\n            <input onChange={handlerChange}\n            name='todoTitle'\n            value={newTask.todoTitle || \"\"}\n            type=\"search\"\n            placeholder=\"New task...\"\n            />\n           <button className=\"add-todo\" type=\"submit\" disabled={newTask.value === '' ? true : false} onClick={() => addToDo()}>+</button>\n        </form>\n        \n        </div>\n    )\n}","import React from 'react'\nimport ReactDOM from 'react-dom';\n\n\n\nexport function Form({ Login, Registration, RegistrationSucceed, activeRegistratoinSucceed, setActiveRegistratoinSucceed,activeRegistration, setActiveRegistration, activeLogIn, setActiveLogIn, ErrorMessage, errorMessageActive, setErrorMessageActive, errorMessage, setErrorMessage }){\n\n\nreturn ReactDOM.createPortal(\n    <div className={activeRegistration || activeLogIn || activeRegistratoinSucceed || errorMessageActive ? \"layout-form active\" : \"layout-form\"}>\n\n    <ErrorMessage \n    errorMessageActive={errorMessageActive}\n    errorMessage={errorMessage}\n    setErrorMessageActive={setErrorMessageActive}\n    />\n\n    <Registration \n    activeRegistration={activeRegistration} \n    setActiveRegistration={setActiveRegistration}\n    activeLogIn={activeLogIn}\n    setActiveLogIn={setActiveLogIn}\n    setActiveRegistratoinSucceed={setActiveRegistratoinSucceed}\n    setErrorMessageActive={setErrorMessageActive}\n    errorMessageActive={errorMessageActive}\n    setErrorMessage={setErrorMessage}\n    />\n\n    <RegistrationSucceed \n    activeRegistratoinSucceed={activeRegistratoinSucceed}\n    setActiveRegistration={setActiveRegistration}\n    setActiveLogIn={setActiveLogIn}\n    setActiveRegistratoinSucceed={setActiveRegistratoinSucceed}\n    />\n\n    <Login \n    activeRegistration={activeRegistration} \n    setActiveRegistration={setActiveRegistration}\n    activeLogIn={activeLogIn}\n    setActiveLogIn={setActiveLogIn}\n    setErrorMessageActive={setErrorMessageActive}\n    setErrorMessage={setErrorMessage}\n    />\n</div>,\n    document.getElementById('portal')\n    )\n}","import './App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { ErrorMessage } from './authorisation/ErrorMessage';\nimport { Login } from './authorisation/Login';\nimport { Registration } from './authorisation/Registration';\nimport { RegistrationSucceed } from './authorisation/RegistrationSucceed';\nimport { TaskList } from './To-Do/Task-List';\nimport { NewTask } from './To-Do/New-Task';\nimport { Form } from \"./authorisation/Form\";\nimport { signOut } from 'firebase/auth'\nimport { auth } from './firebase-config';\n\n\n\n\nfunction App() {\nconst [activeRegistration, setActiveRegistration] = useState(true)\nconst [activeLogIn, setActiveLogIn] = useState(false)\nconst [activeRegistratoinSucceed, setActiveRegistratoinSucceed] = useState(false)\nconst [newTask, setNewTask] = useState({value: ''}) //to omit console warning,init. state.\nconst [allTask, setAllTask] = useState([])\nconst [errorMessageActive, setErrorMessageActive] = useState(false)\nconst [errorMessage, setErrorMessage] = useState('')\n\n\nconst logout = async () => {\n  await signOut(auth)\n  setActiveLogIn(true)\n}\n\n\nreturn (\n<div className=\"App\">\n <Form \nLogin={Login} \nRegistration={Registration}\nRegistrationSucceed={RegistrationSucceed}\nErrorMessage={ErrorMessage}\nerrorMessageActive={errorMessageActive}\nsetErrorMessageActive={setErrorMessageActive}\nerrorMessage={errorMessage}\nsetErrorMessage={setErrorMessage}\nactiveRegistration={activeRegistration} \nsetActiveRegistration={setActiveRegistration}\nactiveLogIn={activeLogIn}\nsetActiveLogIn={setActiveLogIn}\nactiveRegistratoinSucceed={activeRegistratoinSucceed}\nsetActiveRegistratoinSucceed={setActiveRegistratoinSucceed}\n/>\n\n <NewTask \n newTask={newTask}\n setNewTask={setNewTask}\n setAllTask={setAllTask}\n allTask={allTask}\n />\n\n <TaskList \n allTask={allTask}\n setAllTask={setAllTask}\n newTask={newTask}\n />\n \n<button className='btn logout' onClick={() => logout()}>Log OUT</button>\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n /* <Registration \n activeRegistration={activeRegistration} \n setActiveRegistration={setActiveRegistration}\n activeLogIn={activeLogIn}\n setActiveLogIn={setActiveLogIn}\n closeForm={closeForm} />\n\n <Login \n activeLogIn={activeLogIn}\n setActiveLogIn={setActiveLogIn}\n activeRegistration={activeRegistration}\n setActiveRegistration={setActiveRegistration}\n closeForm={closeForm} /> */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}